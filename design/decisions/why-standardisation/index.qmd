---
title: "Standardisation tools to support team workflow"
description: "When creating a piece of software like Seedcase there are a lot of things that it would be a good idea to either standardise, or to avoid having to type up again and again.  Templates and code snippets are some of the tools available to deal with these challenges."
author: "Kristiane Beicher"
date: last-modified
categories:
  - templates
  - standardisation
  - team work
  - code snippets
---

## Context and Problem Statement

When working together with other people on a project it is easy to get bogged down in the 'how' to do things rather than actually doing something.  There may also be situations where a workflow will be easier if it looks the same each time you encounter it.  The question here becomes:

> How do we ensure that we work most efficiently, and have all the information we need to do our job to hand, when we need it?

Not everything can be solved by standardisation, but quite a few workflow will always benefit from having a standard list of items that must be present before the next step in the process is initialised.

## Decision Drivers

As we have expanded the team it has become increasingly clear that we need some more standardised ways of dealing with some of the issues that a team of people encounter when working on a shared project.  There are for instance a number of things that we need to have present when reviewing pull request, or merging branches.  A number of these challenges can be overcome by setting standards for how we present data, and how we hand tasks over internally within the team.

## Considered Options

### Templates

Templates helps with streamlining workflows, where implemented they enforce certain requirements regarding the information needed for a workflow to commence, and they help with ensuring that all the data needed to make a decision is present.  Templates can be used in many areas, we have (for now) focused on implementing them in the GitHub workflows. We are focusing on setting up templates for creating issues, and at the other end submitting pull requests.  In between we are recommending an extension for commits (Conventional Commits) which guides you through submitting a commit with more sensible comments.  

### Code snippets in VS Code 

User generated code snippets is a tool that was made available in Visual Studio Code back in 2018.  There is similar functionality in other editors, but VSCode seems to be the one that have support for markdown and quarto.  Code snippets rely on tab completion being enabled, but once that has been set it is very easy to create a set of custom snippets.  For the seedcase team we have (for now) focused on creating snippets that will allow us to use the same markdown/quarto formatting when writing our documentation.  There are snippets for creating tables as well as standardising comments, more information on how to use code snippets can be found here.

<!--TODO link to doc on code snippets once we decide where to place it -->

<!--TODO Check with Richard if pyCharm has similar function for 'text' editing-->

::: content-hidden

- joint list of categories
- Projects on GitHub (using 'workflows')
- DevContainer
- Extension
:::

## Decision Outcome

There won't be any decisions made for now on whether or not to use the above mentioned ways of working.  In stead we will be implementing (and have been implementing) them over the coming months, and testing out which works for us, and which will slowly stop being used and therefore turn out not to be something that is ideal for the seedcase team.

<!--TODO Consider: Should this be moved to another part of seedcase, the team section for instance?-->