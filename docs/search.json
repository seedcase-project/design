[
  {
    "objectID": "architecture.html",
    "href": "architecture.html",
    "title": "Architecture",
    "section": "",
    "text": "data on server, analysis local\ndata on server, analysis same server\n\ne.g. if data owners are same group as data analysts (within research group)\n\ndata on server, analysis different server\n\ne.g. if data owners are not same as data analysts (external collaborators or open access dataset)\n\ndata on local, analysis local\ndata on local, analysis server\n\n\n\n\n\nOn server\n\nOwn the server and have control\n\ne.g. like AWS or Computerome?\n\nDon’t own the server and don’t have control\n\ne.g. like DST\n\n\nOn local"
  },
  {
    "objectID": "architecture.html#api",
    "href": "architecture.html#api",
    "title": "Architecture",
    "section": "API",
    "text": "API"
  },
  {
    "objectID": "architecture.html#backend",
    "href": "architecture.html#backend",
    "title": "Architecture",
    "section": "Backend",
    "text": "Backend\n\nparquet?\n\nschema with metadata embedded\n\nchangelog\n\n\n\nproject database"
  },
  {
    "objectID": "index.html#overview-of-the-data-infrastructure-framework",
    "href": "index.html#overview-of-the-data-infrastructure-framework",
    "title": "A framework for an open and scalable infrastructure for health data exemplified by the DD2 initiative",
    "section": "Overview of the data infrastructure framework",
    "text": "Overview of the data infrastructure framework\nFor this project, the data infrastructure framework is defined as 1) a set of software programs, 2) a defined and fixed set of conventions on the structure and format of the filesystem and URL paths, and 3) a defined structure to the data and associated documentation, all of which are linked together as modular components. The framework will serve as an open source starting template for setting up data infrastructures that make use of modern tools and processes.\nThis framework encompasses four target users and three layers, with a complete schematic shown in Figure 2. The three layers are the web portal frontend, the database and documentation backend, and the API (Application Programming Interface) that interacts with both. The four users and their associated use cases are:\n\nUser 1: Those inputting data, e.g., authorized centers and researchers. The use cases are:\n\nAuthorized centers (GPs and hospitals) upload standardized and routine data through the data entry web portal.\nAuthorized researchers upload generated data from completed projects. Non-standardized data is manually processed and cleaned before entering into the database.\n\nUser 2: Those requesting access, e.g., researchers and clinicians. Use cases are:\n\nInterested researchers browse the catalogue of available data and the data dictionary.\nResearchers request access to data by submitting a description of their proposed project and selecting the relevant data from the catalogue. This request is sent to a list of projects to await approval from the data controllers (User 4).\n\nUser 3: Those viewing updates on findings and results such as aggregate statistics, e.g., policymakers, healthcare workers, journalists, researchers, and the general public. Use cases are:\n\nUsers view and read through the list of completed, ongoing, and proposed projects that use the database.\nUsers access and view aggregate statistics and the latest published findings that are relevant to them/their practice.\n\nUser 4: Administrators and data controllers. Use cases are:\n\nApprove newly submitted projects that request data and manage existing projects.\nApprove and authorize researchers to access the web portal for data requests and to manage current authorized researchers.\nManage collection centers’ access and authorization.\n\n\nThroughout this application, we’ll refer to these four users and three layers as we expand on and describe the framework.\n\n\n\n\n\nFigure 2: Detailed schematic of the data infrastructure framework.\n\n\n\nKey principles underlying the framework\nTo ensure the development of this framework is efficient and focused, it will adhere to key principles that are supported by strong philosophical and scientific rationale:\n\nFollow FAIR (Findable, Accessible, Interoperable, and Reusable), open, and transparent principles for the framework itself and to enable FAIR principles in the database.\nBe openly licensed and re-usable to facilitate uptake in other national groups (or companies) who are unable to invest in and build it.\nUses state-of-the-art principles and tools in software design and development.\nBe beginner-friendly and targeted to (potential) non-computationally technical users of the framework.\n\nIn order to maximise the potential for re-use and to minimise the technical debt and expertise needed to use, maintain, and modify the framework, we will use software and tools underlying the framework that fit these principles:\n\nWherever possible, re-use existing material: There already exists many great software tools, infrastructures, and resources that haven’t been incorporated into common health research practice. We will make use of and/or modify these materials where we can.\nBe familiar to or used by researchers currently or within the near future: To ensure the greatest potential for continued maintenance, development, and use, the framework should use or be built with tools and skills that are at least familiar or soon to be familiar to researchers.\nBe familiar to skilled personnel (e.g. research software engineers, data engineers, data scientists): Skilled personnel will build this framework and need to be familiar with them.\nBe open source: Software that isn’t open source is by definition not transparent, FAIR, or open. This is a requirement as it will encourage wide and easy re-use.\nIntegrates easily with other software: Modular software that follows common input/output conventions and has well-designed and documented APIs are easier to build with and maintain.\nHistorically stable and reliable: While there are always new software being built, maintenance and development is easier when using those that are established.\nLikely to be used in the future or is easily interchangeable with potential future tools: Technology progresses quite quickly, so we will rely on software that is likely to still be used or can be switched to other tools.\n\n\n\nSelected software and tools to use\nBased on the above principles, we have chosen the following software and conventions to form the framework’s foundation:\n<<<<<<< Updated upstream - R and/or Python: Are open source and established. - RESTful API: REST (representational state transfer) is the de facto standard for building APIs. - CSV, SQL, and JSON format for data storage: Are open source and established formats for data and other web information. - JSON (JavaScript Object Notation) is the Internet’s de facto standard format for information transfer. - CSV is well known to researchers. - SQL (a querying language and data storage format) is a widely used format for storing data. - Git, GitLab, and DVC for version control: Formal version control (VC) systems are software that track changes to files and are standard practice in software engineering. After Git was developed, it has increasingly been used by researchers across scientific fields to improve research transparency and openness. GitLab is an open source product to host Git projects and handles many modern software development tasks. DVC, or Data Version Control, is a machine learning VC software for data and models that integrates with Git. - Markdown for documentation: Markdown is a common web format and is quickly becoming a standard in data science and even within many scientific fields. It is a simple syntax for writing documents that enables easy conversion to file formats like HTML or Word. It is simple and portable, so will be used for writing the data dictionary, results, documentation, and training material. - Tools for modern web-based interfaces: These include HTML, CSS, JavaScript, and other web technologies, as well as User Interface (UI)/User Experience (UX) design principles. - Software development best practices: This includes unit testing, continuous integration, and document-driven development (to emphasize usability). We’ll use the concept of Minimum Viable Product (MVP) as a means of quickly building something that is minimally workable. - Re-use of similar infrastructures: Modules from initiatives like Gen3 will either be re-used directly or modified to fit our requirements. ======= - R and/or Python: Are open source and established. - RESTful API: REST (representational state transfer) is the de facto standard for building APIs. - CSV, SQL, and JSON format for data storage: Are open source and established formats for data and other web information. - JSON (JavaScript Object Notation) is the Internet’s de facto standard format for information transfer. - CSV is well known to researchers. - SQL (a querying language and data storage format) is a widely used format for storing data. - Git, GitLab, and DVC for version control: Formal version control (VC) systems are software that track changes to files and are standard practice software engineering. After Git was developed, it has increasingly been used by researchers across scientific fields to improve research transparency and openness. GitLab is an open source product to host Git projects and handles many modern software development tasks. DVC, or Data Version Control, is a machine learning VC software for data and models that integrates with Git. - Markdown for documentation: Markdown is a common web format and is quickly becoming a standard in data science and even within many scientific fields. It is a simple syntax for writing documents that enables easy conversion to file formats like HTML or Word. It is simple and portable, so will be used for writing the data dictionary, results, documentation, and training material. - Tools for modern web-based interfaces: These include HTML, CSS, JavaScript, and other web technologies, as well as User Interface (UI)/User Experience (UX) design principles. - Software development best practices: This includes unit testing, continuous integration, and document-driven development (to emphasize usability). We’ll use the concept of Minimum Viable Product (MVP) as a means of quickly building something that is minimally workable. - Re-use of similar infrastructures: Modules from initiatives like Gen3 will either be re-used directly or modified to fit our requirements. >>>>>>> Stashed changes"
  },
  {
    "objectID": "index.html#the-frameworks-layers",
    "href": "index.html#the-frameworks-layers",
    "title": "A framework for an open and scalable infrastructure for health data exemplified by the DD2 initiative",
    "section": "The framework’s layers",
    "text": "The framework’s layers\n\nFrontend interface: The web portal\nThis interface is what all users interact with and use, with essentially three “permission” levels available:\n\nFull access: User 4.\nAuthorized access:\n\nUser 1: A data upload portal that accepts either the routine, known data or new, unknown data from User 2.\nUser 2: A data request portal that allows the user to select variables in the catalogue of data as well as write and submit project proposals for access.\n\nPublic access: User 3 would have access to all public pages, which includes the data dictionary, updates on findings, list of current and past projects, and a log of any changes or additions to the data.\n\nAll content would be rendered directly as plain HTML text to ease use of existing webpage translation services (e.g. Google Translate), so that content written in another language, i.e., Danish, would still be readable to non-native speakers. This would also lower the amount of maintenance necessary for documentation.\n\n\nMiddle-layer: The API\nModern web and computational infrastructures are built on web APIs. Any modern online resource or interface makes use of an API, such as from Google, Gen3, or the UK Biobank. An API is a mechanism by which different programs can communicate with one another. They form a set of instructions or conventions that allow easy communication between a user and the computer. APIs by their nature are transparent and if well-documented would ensure the linked data would be FAIR, safely and securely.\nIn this case, the API would be between the user and the web server that stores the underlying database and documentation. The API would be a combination of a predefined set of instructions that are sent to the web server to run certain commands as well as a set of explicit conventions and rules on how files and folders are structured and named. Taken together, this API would allow other software like R packages to be built to interact with the backend to automate tasks done by the users.\n\n\nBackend: The database and documentation\nGiven the heterogeneity in the sources of data input, the backend will need to be composed of multiple components: raw data files as plain text, cleaning and processing programming scripts, a formal database structure (e.g. SQL), a VC system to track changes to the raw data and processing scripts, a data version numbering system, a changelog describing the changes, and a data dictionary linked to the variables contained in the database. Versioning of the raw data and scripts is done for recordkeeping, auditing, and transparency, in addition to allowing comparison of data used between past and current projects that use the data.\nA major challenge to building the backend is in the heterogeneity of the data input. The key is to establish and enforce a standardized Common Data Model (CDM) for all incoming data at the point of entry. For the framework, the exact contents of the database aren’t important, since as long as the contents follow the CDM it will be programmatically merged into the final formal database. This is necessary as the database contents depend heavily on the research topic and aims of the study that will use this framework.\nThe backend documentation is either largely generated automatically or manually written. For instance, the list of projects and findings would be generated by the submitted projects and input from User 2 (researchers) while the changelog would be updated either by automated additions or, optionally, manually from User 4. The data dictionary would be stored as a JSON file with the documentation text itself as Markdown text. This data dictionary would be publicly accessible and could be updated by anyone (with approval from User 4), potentially through “Merge Request” mechanisms. This mechanism involves automatically linking any addition or correction back to the main documentation and requesting it be merged into it."
  },
  {
    "objectID": "index.html#user-to-backend-pipeline",
    "href": "index.html#user-to-backend-pipeline",
    "title": "A framework for an open and scalable infrastructure for health data exemplified by the DD2 initiative",
    "section": "User-to-backend pipeline",
    "text": "User-to-backend pipeline\n\nUser 1: Inputting data\nDepending on the source of data, there may already be established data input processes. Substantial amounts of biomedical data, especially in Denmark, come from already established, routinely collected clinical data such as from outpatient clinics. For these sources of data, the data input pipeline would involve redirecting these data sources through the API and storage format so the data continues on to the backend.\nSources of data that don’t have well-established data input processes, such as from hospitals, medical laboratories, and so on, would use the data input portal. This portal would only accept data that is in a pre-defined format and would include documentation, and potentially automation scripts, on how to pre-process the data prior to uploading it.\nOnce the data is submitted through the portal, it would get sent in an encrypted, legally-compliant format to the server and stored in the way defined by the API and CDM. Any new or updated data that is uploaded would trigger generic automated data cleaning, processing, quality control checks of this new data. Any automated processing that is developed specific to a project would need to adhere to the API’s conventions. If any issues are found or if the data is entirely new to the database, they get sent to a log and User 4 would receive a notification to deal with the issue. If there are no issues or the issues have been dealt with, an automated script would take a snapshot of the data with the VC system, the version number (based on Semantic Versioning) of the data would be updated, an entry would get added to the changelog, and the formal database would get updated.\n\n\nUser 2: Requesting access\nResearchers and other users who want to request access to the data would first need their identity verified and then be approved for authorized access. After approval, they would interact with the frontend by two routes:\n<<<<<<< Updated upstream 1. Browsing from the catalogue of existing variables in the database, along with the data dictionary and the data changelog, and then selecting those variables that are relevant to their project. The catalogue of variables would be a table that is built from the underlying set of files that contain the documentation and that includes a button to select and save the variables of interest. If they desired, they could also update any errors or typos in the data dictionary through the “Merge Request” mechanism described above. 2. Writing a description of the scientific rationale of the project and adding any relevant information into a web form that User 4 would use to decide on approval and that would be displayed on the website for User 3. ======= 1. Browsing from the catalogue of existing variables in the database, along with the data dictionary and the data changelog, and then selecting those variables that are relevant to their project. The catalogue of variables would be a table that is built from the underlying set of files that contain the documentation and that includes a button to select and save the variables of interest. If they desired, they could also update any errors or types in the data dictionary through the “Merge Request” mechanism described above. 2. Writing a description of the scientific rationale of the project and adding any relevant information into a web form that User 4 would use to decide on approval and that would be displayed on the website for User 3. >>>>>>> Stashed changes\nWhen User 4 approves a data request project, it will trigger an API request that would automatically extract the requested subset of data, bundle and encrypt it, and send it to the researcher’s secure server. The framework will contain sufficiently generic methods for automating the data transfer process.\n\n\nUser 3: Viewing details\nThe framework assumes that this user would interact with the portal through at least three routes:\n\nReading about the database, its history, organizational structure and ownership, and any other details in a typical “About” section. Since this is a part of a basic website layout, it is not fully part of the framework.\nBrowsing completed and ongoing projects making use of the database, along with the description of the project and variables used. This would be based on a “database” of projects that have requested access to the data, would be stored in JSON format, and through the API specification would be generated into a table on the portal.\nGetting updates on the latest results from the projects and browsing some basic aggregate statistics of some key variables. This would involve programmatically generating standard aggregate statistics of the underlying database, formatting results according to the API, transferring them to the web server, and have it generated into a webpage format. Overlapping with the second route, key findings from completed projects can be stored in the projects database and be generated into a listing on the website.\n\n\n\nUser 4: Administrators and data controllers\nThese users would largely interact with the web portal for managing and overseeing ongoing projects, approve access for new researchers, and approve projects requesting access to data. Approving new researchers would grant the researchers access permissions to enter the User 2 portal."
  },
  {
    "objectID": "index.html#additional-key-components",
    "href": "index.html#additional-key-components",
    "title": "A framework for an open and scalable infrastructure for health data exemplified by the DD2 initiative",
    "section": "Additional key components",
    "text": "Additional key components\n\nSecurity, privacy, and legality\nThe framework itself does not contain any personal data. When the framework is deployed as an infrastructure for a database, only aggregate statistics, and not individual-level personal data, would be publicly accessible. Any personal data would be stored on a secure server that is decided and controlled by User 4, who would be responsible for complying with relevant legal requirements.\nFor data transfers of personal data, either from data collection centers, data generated from researchers, or when transferring data for approved projects, we would use well-established and compliant encrypted data transfer processes. Key authentication principles such as two-factor authentication and OAuth (open standard for access authentication) will be central to the framework to control who can update or transfer the data. The endpoint of the data transfer is dealt with by the legal teams of the relevant institutions.\n\n\nDissemination of framework\nTo be aligned to the goals of openness, transparency, and FAIR principles, the complete development of the framework will take place openly on GitHub. From there we will link to and promote it through various outlets, including publications, conferences, and social media. The framework and all its components will be licensed under permissive copyright licenses like the MIT License for the software and the Creative Commons Attribution License for non-software content.\n\n\nSustainability\nIntegral to this framework is ensuring it is sustainable over the long-term by:\n\nIntegrating the development of the framework and using it in multiple projects at the host institution Steno Diabetes Center Aarhus (SDCA).\nPrototyping MVP to build and document maintenance procedures.\nIncorporating fundamental open source sustainability concepts and documentation such as writing a Code of Conduct and Contributing Guidelines and encouraging external users to contribute.\nIncluding duties for the hired personnel to contribute back to open source software that the framework depends on to help their, and indirectly the framework’s, sustainability.\n\n\n\nTraining and educational development\nUsage of this framework depends on the quality of its documentation and training material. A key concept we will use heavily is Documentation Driven Development, where the framework’s development is guided and informed from the development of the documentation, which places documentation as a high priority. We will also be creating and running short workshops and tutorials that teach researchers how they can use this framework."
  },
  {
    "objectID": "index.html#resource-requirements",
    "href": "index.html#resource-requirements",
    "title": "A framework for an open and scalable infrastructure for health data exemplified by the DD2 initiative",
    "section": "Resource requirements",
    "text": "Resource requirements\n\nComputational and physical infrastructure\nWhile the proposed framework is software-based, storing and deploying the infrastructure requires server space and IT support. The framework itself takes up little space and can optimise computational resources, but the underlying DD2 data requires considerable server space.\n\n\nTechnical skills and personnel\nTo have a meaningful impact on improving research infrastructure, the minimum skills and knowledge necessary are:\n\nBuilding and interacting with RESTful APIs (or APIs in general)\nCreating websites and knowledge on UI/UX designs\nDeveloping software/general programming in R/Python\nUsing Git and GitHub/GitLab\nDatabase management/administration\nFamiliar with creating training material and teaching\nExperience in working on open source projects and with FAIR principles\nExperience in the Danish research computing environments, e.g., “forskermaskine” (research engine on Denmark Statistics (DST))"
  },
  {
    "objectID": "index.html#applying-the-framework-to-dd2",
    "href": "index.html#applying-the-framework-to-dd2",
    "title": "A framework for an open and scalable infrastructure for health data exemplified by the DD2 initiative",
    "section": "Applying the framework to DD2",
    "text": "Applying the framework to DD2\nThe biggest potential challenge to applying the framework to DD2 is getting the database backend into the appropriate structure to fit within the framework. With the current state of the DD2 data, considerable time and effort is needed to organize it. Our initial steps will be to:\n\nSurvey and map out all data, documentation, and processing steps. Currently, the original enrollment data are stored in a secure server at the DD2 headquarters at Odense, while subsets of data collected for specific research projects are spread across several research institutions.\nMap the data input sources and formats from the various collection centers. GP clinics have an existing pipeline for sending data to DD2 through their system, “sundhedsdatanettet” (national healthcare portal), following a patient visit. Other collection centers like hospitals have custom, but not standardized, approaches to sending data to DD2. No formal approach is available for returning data from completed projects. The core DD2 data is sent to “forskermaskine” and gets merged there with the registry data, which is in a standard DST format.\n\nMove as much data as possible to a central location. All data will be stored at the DD2 headquarters in Odense, except large-scale data that will be either stored or transferred as needed to a high-performance computing (HPC) platform. For linkage with registry data, we will acquire a dedicated DD2 “forskermaskine” server.\nRe-structure current data into the framework’s CDM.\nBuild software to automate the cleaning, processing, and merging of the existing and established data input pipelines into the framework’s required backend format.\nEstablish automated processes for linkages between the data storage servers.\nImplement framework’s remaining modules, starting with User 4 and then moving from User 1 to 3, in that order.\n\nCurrently, User 3 can request data by filling out a Word application form and emailing it to the chair of the advisory board Kurt Højlund and programme leader Jens Steen Nielsen. Applications are reviewed by the steering committee and, once approved, the data manager at the Department of Clinical Epidemiology (KEA) in Aarhus University Hospital then manually extracts the requested data and transfers the data subset to the applicant’s secure server and does this for each individual research project. If requested, KEA may also perform analyses on the data. Researchers must already have valid authorized access to the secure servers on an existing “forskermaskine” or an HPC facility for the large-scale data, such as Computerome 2 and GenomeDK.\nThe costs of storing the original data are covered by DD2, while applicants cover the costs related to storing the transferred data. We will not charge for data access. As per legal requirements, researchers can only use the data for the intended purposes listed in the application. After project completion, the researchers must delete or close access to the data and inform DD2 as legally required. Any newly generated data must be returned to DD2 by uploading via the User 1 portal."
  },
  {
    "objectID": "index.html#deliverables-and-milestones",
    "href": "index.html#deliverables-and-milestones",
    "title": "A framework for an open and scalable infrastructure for health data exemplified by the DD2 initiative",
    "section": "Deliverables and milestones",
    "text": "Deliverables and milestones\nBecause the framework will be built with modularity in mind, where each component could be used alone or together, nearly all the components could be deliverables (each User by each layer). Each deliverable would be to prototype a MVP to begin testing it, identifying bugs, getting feedback, and establishing maintenance procedures. See Figure 3 for the Gantt chart.\n\n\n\n\n\nFigure 3: Gantt chart of deliverables and timelines."
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Data Infrastructure Framework Project",
    "section": "",
    "text": "=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public: \nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "random.html",
    "href": "random.html",
    "title": "Data Infrastructure Framework Project",
    "section": "",
    "text": "Why the technologies we choose\n\ndesign/decisions/why-*\ndesign/decisions/why-github.md\ndesign/decisions/why-python.md\ncontribute/decisions/why-* (eg. why-discord.md)\n\n\n\n\n\nCONTRIBUTING.md: General user contributing\nGOVERNANCE.md: Structure of organization, team, and ownership, how decisions are made.\nCODE_OF_CONDUCT.md\n\nWith contact for issues/conflicts (Annelli, otherwise go with Niels as independent?)\n\ncontribute/index.md: Link to CONTRIBUTING.md, CODE_OF_CONDUCT.md, and GOVERNANCE.md\ncontribute/team/conduct.md\ncontribute/team/contributing.md\ncontribute/team/events/index.md\n\nStructure of events, how often, etc.\n\ncontribute/team/events/DATE-agenda.md\ncontribute/team/communication.md (?)\ncontribute/roadmap.md\n\nmilestones, gantt chart?\n\ncontribute/workflow.md (name?)\n\nWhen and what are tagged as releases (for both product and docs)\n\n\n\n\n\n\npipeline/ (automatic processes for tasks, like rebuilding changelog etc)\napi/\ncommon-data-model/setup.*\ncommon-data-model/update.*\nbuild-data-model\nupdate-data-model\nbuild-changelog\nupdate-changelog\ngenerate-data-doi\nupdate-\nMatrix/Pathways\n\nFour users\nThree layers\n\nConnectors\n\nR\nPython\nBash/shell\nRedCap\n\n\n\n\n\nWhat it is about, mission, and purpose\n\nabout/index.md\nabout/mission.md\n\nValues as well: eg. clear over concise\n\nabout/contact.md\nabout/governance.md (link to GOVERNANCE.md?)\n\nInstallation\n\ninstalling.md\n\nDesign and architecture (pathways will have all use cases, how user interacts with product, computational steps taken from user interaction) (as its own repo?)\n\ndesign/index.md\ndesign/paper.md (name?): connects all docs and sends to Zenodo for each “release”\ndesign/overview.md\n\nvalues and guiding principles\nMore detailed than the diagram and more pathways and connections\n\ndesign/diagram.png (svg, etc)\ndesign/architecture/frontend.md\ndesign/architecture/backend.md\ndesign/architecture/api.md\ndesign/pathways/data-input.md\ndesign/pathways/data-discovery.md\ndesign/pathways/admin.md\ndesign/pathways/knowledge-sharing.md\n\nUsage, tutorials and training\n\nusage/index.md: Introduction\nusage/reference.md: Contains individual function, method, and API documentation (built from package docs? Or link to built package website?)\nusage/getting-started/user.md\nusage/getting-started/admin.md\nusage/installing/* (whole folder for instructions on installing indifferent environments?)\nlearn/courses/*\n\nin-person as well as online material?\n\nlearn/tutorials/*\n\nin-person as well as online material?\n\n\n\n\n\nInformal side:\n\nblog/*: As we learn about things, we share, new things found, brief training\n\nUse categories like training, knowledge, tool, etc etc\n\n\nFormal side (largely undocumented/done through other channels aka calendar, slack, Issue discussions, etc)\n\ncontribute/team/contributing.md\n\nhow in-person events are structured and what we do or expectations\nHow we work together, where we work, how plan or coordinate\nWhen we collaborate/co-work (open session and closed session?)\n\nHow to manage and coordinate tasks and deadlines\n\n….?\n\nformal posts (aim to publish in zenodo, and other outlets?)"
  },
  {
    "objectID": "random.html#steps",
    "href": "random.html#steps",
    "title": "Data Infrastructure Framework Project",
    "section": "Steps",
    "text": "Steps\n\nHow to work together effectively and optimally\n\nCONTRIBUTING\n\nWorkflow (Github)\nWhen we work together, how often\nWhich communication channels? (Discord/Slack/Zoom/etc)\n\nGOVERNANCE\n\ne.g. in general I’m responsible for overall plan and structure of project but that doesn’t mean others don’t get decision. We work as a team, each with areas of responsibilities but we all have a stake in this.\n\nCODE OF CONDUCT\n\nHow do we want to work together and behave.\nHow to resolve conflict.\n\n\nHow to share knowledge and skills learned and experiences (inside and outside of team) (-docs)\n\nblog/*\n\nDesign, architecture, and technologies (-docs)\n\ndesign.md\narchitecture/api.md\n\ndecisions/why-rest-api.md\ndecisions/why-django-or-flask.md\n\narchitecture/backend.md\n\ndecisions/why-sqlite-or-parquet.md\n\narchitecture/frontend.md\n\ndecisions/why-…\n\n\nOther things:\n\nInvolve with sci-coll collaboration project? Since we’ll be doing it.\nInvolve with DST? (esp. Kris)"
  },
  {
    "objectID": "random.html#questions",
    "href": "random.html#questions",
    "title": "Data Infrastructure Framework Project",
    "section": "Questions",
    "text": "Questions\n\nName for the product?\nDo we make a new GitHub org or use steno-aarhus?\nHow many repos?\n\none for product\n\nincluding product docs, reference docs, general usage, etc\ngh-pages/built docs as website, but not part of installation\n\none for project itself, more academically and internally training focused? e.g. blogs\none for product documentation? website, docs, function references, architecture\n\nMultiple packages or one single one?"
  }
]